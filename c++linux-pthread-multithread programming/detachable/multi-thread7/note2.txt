可连接线程和可分离线程的最重要区别：在如何一个时间点上，程序是可连接（joinable）的，或者是可分离（detachable）的。
一个可连接线程在自己退出时或者pthread_exit时都不会释放线程所占用的堆栈和线程描述符（总计8000字节），
需要通过其他线程调用pthread_join之后，这些资源才会被释放；相反，一个可分离程序是不能被其他线程回收
或者杀死，它所占用的资源在终止时有系统自动释放。
可以把一个可连接线程变为一个可分离线程，好处是，它自己退出或者调用pthread_exit,就可以由系统回收其资源了。
转换方法就是pthread_detch函数。
int pthread_detach(pthread_t thread);

需要注意的是：如果一个程序已经被其他线程连接了，pthread_detach不会产生作用，并且该线程仍然是可连接状态
如果一个线程成功第进行pthread_detach后，想要去连接它，则必定失败
